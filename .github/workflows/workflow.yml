name: Build and Deploy Infrastructure and Application

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY_NAME: GuyAppRegistry
  IMAGE_BASE_NAME: python-flask-app
  REGISTRY_LOGIN_SERVER: GuyAppRegistry.azurecr.io
  APP_SERVICE_NAME: guyAppService

jobs:
  build-bicep:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/cli@v1.0.7
        with:
          inlineScript: |
            az version

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build Bicep Template
        run: |
          # Validate the Bicep template
          az bicep build --file main.bicep

  deploy-infrastructure:
    runs-on: ubuntu-latest
    needs: build-bicep
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/cli@v1.0.7
        with:
          inlineScript: |
            az version

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Bicep Template
        run: |
          az deployment group create \
            --resource-group BCSAI2024-DEVOPS-STUDENTS-A-DEV \
            --template-file main.bicep \
            --parameters main.parameters.json

  build-and-push-container:
    needs: deploy-infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get ACR credentials
        id: get-acr-creds
        run: |
          ACR_USERNAME=$(az acr credential show -n ${{ env.REGISTRY_NAME }} --query "username" -o tsv)
          ACR_PASSWORD=$(az acr credential show -n ${{ env.REGISTRY_NAME }} --query "passwords[0].value" -o tsv)
          echo "::add-mask::$ACR_PASSWORD"
          echo "username=$ACR_USERNAME" >> $GITHUB_OUTPUT
          echo "password=$ACR_PASSWORD" >> $GITHUB_OUTPUT

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_LOGIN_SERVER }}
          username: ${{ steps.get-acr-creds.outputs.username }}
          password: ${{ steps.get-acr-creds.outputs.password }}

      - name: Set image version
        id: image-version
        run: echo "::set-output name=version::$(echo ${GITHUB_REF#refs/heads/})-$(date +'%Y.%m.%d.%H.%M')"

      - name: Build and push image
        working-directory: ./msdocs-python-flask-webapp-quickstart
        run: |
          docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}
          docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ github.ref_name }}-latest
          docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}
          docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ github.ref_name }}-latest

  deploy-container:
    needs: build-and-push-container
    runs-on: ubuntu-latest
    steps:
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APP_SERVICE_NAME }}
          images: ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ github.ref_name }}-latest